// app/layout.tsx
import type { Metadata } from 'next';
import './globals.css';
import { Poppins } from 'next/font/google';
import localFont from 'next/font/local';
import { Providers } from './Providers';
import { getLocale } from 'next-intl/server'; // Use `getLocale` instead of `requestLocale`
import { getLangDir } from 'rtl-detect';

export const metadata: Metadata = {
  title: 'MTN INSTITUTE',
  description: 'Generated by ROMAMPH DEV TEAM',
};

const poppins = Poppins({
  subsets: ['latin'],
  weight: ['300', '400', '500', '600', '700'],
  display: 'swap',
  variable: '--font-poppins',
});

const cairo = localFont({
  src: '../public/fonts/Cairo-Regular.ttf',
  variable: '--font-cairo',
  display: 'swap',
});

type RootLayoutProps = {
  children: React.ReactNode;
};

// async function getMessages(locale: string) {
//   try {
//     return (await import(`@/messages/${locale}.json`)).default;
//   } catch (error) {
//     console.error(`Failed to load messages for locale ${locale}:`, error);
//     return {};
//   }
// }

export default async function RootLayout({ children }: RootLayoutProps) {
  const locale = await getLocale(); // Fetch the locale dynamically
  const direction = getLangDir(locale);

  return (
    <html lang={locale} dir={direction}>
      <body className={`${poppins.variable} ${cairo.variable}`}>
        <Providers locale={locale}>{children}</Providers>
      </body>
    </html>
  );
}
